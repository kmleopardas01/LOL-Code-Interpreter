# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'projectui.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtCore import QDir
from lexical_analyzer import main as main
from semantic_analyzer import semantic_analyzer


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(901, 626)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.fileUpload = QtWidgets.QPushButton(self.centralwidget)
        self.fileUpload.setGeometry(QtCore.QRect(10, 0, 261, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.fileUpload.setFont(font)
        self.fileUpload.setObjectName("fileUpload")
        self.textArea1 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.textArea1.setGeometry(QtCore.QRect(10, 40, 261, 271))
        self.textArea1.setObjectName("textArea1")
        self.lexeme_label = QtWidgets.QLabel(self.centralwidget)
        self.lexeme_label.setGeometry(QtCore.QRect(310, 0, 251, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lexeme_label.setFont(font)
        self.lexeme_label.setAlignment(QtCore.Qt.AlignCenter)
        self.lexeme_label.setObjectName("lexeme_label")
        self.symbol_tabel_label = QtWidgets.QLabel(self.centralwidget)
        self.symbol_tabel_label.setGeometry(QtCore.QRect(620, 0, 251, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.symbol_tabel_label.setFont(font)
        self.symbol_tabel_label.setAlignment(QtCore.Qt.AlignCenter)
        self.symbol_tabel_label.setObjectName("symbol_tabel_label")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(280, 40, 301, 271))
        self.tableWidget.setMinimumSize(QtCore.QSize(301, 271))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.tableWidget_2 = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget_2.setGeometry(QtCore.QRect(590, 40, 301, 271))
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(2)
        self.tableWidget_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        self.tableWidget_2.horizontalHeader().setDefaultSectionSize(150)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(10, 320, 871, 31))
        self.pushButton.setObjectName("pushButton")
        self.gimmeh_label = QtWidgets.QLabel(self.centralwidget)
        self.gimmeh_label.setGeometry(QtCore.QRect(20, 360, 221, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.gimmeh_label.setFont(font)
        self.gimmeh_label.setAlignment(QtCore.Qt.AlignCenter)
        self.gimmeh_label.setObjectName("gimmeh_label")
        self.gimmeh_input = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.gimmeh_input.setGeometry(QtCore.QRect(230, 360, 541, 31))
        self.gimmeh_input.setObjectName("gimmeh_input")
        self.code_generated = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.code_generated.setGeometry(QtCore.QRect(10, 400, 871, 181))
        self.code_generated.setObjectName("code_generated")
        self.gimmeh_button = QtWidgets.QPushButton(self.centralwidget)
        self.gimmeh_button.setGeometry(QtCore.QRect(770, 360, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.gimmeh_button.setFont(font)
        self.gimmeh_button.setObjectName("gimmeh_button")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 901, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.fileUpload.clicked.connect(self.get_text_file)
        self.pushButton.clicked.connect(self.execute_file)

        self.lex_table = []
        self.symbol_table = []

        self.gimmeh_button.clicked.connect(self.submit_gimmeh)

    def show_code_generated(self):
        with open('output.txt', 'r') as f:
            data = f.read()
            self.code_generated.setPlainText(data)
            f.close

    def submit_gimmeh(self):
        with open('gimme.txt', 'w') as f:
            my_text = self.gimmeh_input.toPlainText()
            f.write(my_text)

    def get_text_file(self):
        dialog = QFileDialog()
        dialog.setFileMode(QFileDialog.AnyFile)
        dialog.setFilter(QDir.Files)

        self.clear_tables()

        if dialog.exec():
            file_name = dialog.selectedFiles()

            if file_name[0].endswith('.lol'):
                with open(file_name[0], 'r') as f:
                    data = f.read()
                    self.textArea1.setPlainText(data)
                    f.close
            else:
                pass

    def clear_tables(self):
        while (self.tableWidget).rowCount() > 0:
            self.tableWidget.removeRow(0)
        while(self.tableWidget_2).rowCount() > 0:
            self.tableWidget_2.removeRow(0)

    def execute_file(self):
        with open('samp2.lol', 'w') as f:
            my_text = self.textArea1.toPlainText()
            f.write(my_text)
        self.get_tables()

        self.show_code_generated()

    def get_tables(self):
        temp_table = main()
        if temp_table != None:
            self.lex_table, self.symbol_table = temp_table[0], temp_table[1]
            print("Here")
            # print(self.symbol_table)
            self.load_lexeme_data()
            self.load_symbol_table()
        else:
            pass

    def load_symbol_table(self):
        # Get Max Row Length
        max_row_length = 0
        for dict1 in self.symbol_table:
            max_row_length = max_row_length + len(dict1)
        #print("Max row is ", max_row_length)

        self.tableWidget_2.setRowCount(max_row_length/2)
        # Get all symbol
        iden_list = []
        for ident in self.symbol_table:
            temp_key_list = ident.keys()
            #print("temp key list", temp_key_list)
            for key in temp_key_list:
                iden_list.append(key)

        value_list = []
        for ident2 in self.symbol_table:
            temp2_key_list = ident2.values()
            for value in temp2_key_list:
                value_list.append(value)
        row = 0
        for i in range(0, len(iden_list), 2):
            self.tableWidget_2.setItem(
                row, 0, QtWidgets.QTableWidgetItem(iden_list[i]))
            row = row + 1

        row2 = 0
        for j in range(0, len(value_list), 2):
            self.tableWidget_2.setItem(
                row2, 1, QtWidgets.QTableWidgetItem(str(value_list[j])))
            row2 = row2+1

    def load_lexeme_data(self):

        # Get Max Row Length
        max_row_length = 0
        for list1 in self.lex_table:
            for dict1 in list1:
                max_row_length = max_row_length + len(dict1)
        # print(max_row_length)

        self.tableWidget.setRowCount(max_row_length)

        # Get all Lexeme
        key_list = []
        for lex in self.lex_table:
            for dict2 in lex:
                temp_key_list = dict2.keys()
                for key in temp_key_list:
                    key_list.append(key)
        # print(key_list)

        value_list = []
        for lex2 in self.lex_table:
            for dict3 in lex2:
                temp2_val_list = dict3.values()
                for val in temp2_val_list:
                    value_list.append(val)
        # print(value_list)
        row = 0
        for i in key_list:
            self.tableWidget.setItem(
                row, 0, QtWidgets.QTableWidgetItem(i))
            row = row + 1

        row2 = 0
        for j in value_list:
            self.tableWidget.setItem(
                row2, 1, QtWidgets.QTableWidgetItem(j))
            row2 = row2+1

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate(
            "MainWindow", "LOL CODE INTERPRETER"))
        self.fileUpload.setText(_translate("MainWindow", "UPLOAD FILE"))
        self.lexeme_label.setText(_translate("MainWindow", "LEXEMES"))
        self.symbol_tabel_label.setText(
            _translate("MainWindow", "SYMBOL TABLE"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Lexemes"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Classification"))
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Identifier"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Value"))
        self.pushButton.setText(_translate("MainWindow", "Execute"))
        self.gimmeh_label.setText(_translate("MainWindow", "GIMMEH"))
        self.gimmeh_button.setText(_translate("MainWindow", "Submit"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
